@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@model quote_calculation_Application.Models.InsureeVM

@{
    ViewBag.Title = "Create";
}



<h2 class="text-center">Create Insuree</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-4">
        <div class="card shadow-lg p-4">
            <h4 class="mb-4">Insuree Details</h4>

            <div class="row mb-3">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.FirstName, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.LastName, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Email, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <h5 class="mt-4">Car Information</h5>
            <hr />

            <div class="row mb-3">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.CarYear, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.CarYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CarYear, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.CarMake, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.CarMake, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CarMake, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.CarModel, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.CarModel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CarModel, "", new { @class = "text-danger" })
                </div>
            </div>

            <h5 class="mt-4">Driving Information</h5>
            <hr />

            <div class="row mb-3">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.SpeedingTickets, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.SpeedingTickets, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SpeedingTickets, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-bold d-block">DUI</label>
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.DUI, new { @class = "form-check-input" })
                        <label class="form-check-label">Yes</label>
                    </div>
                    @Html.ValidationMessageFor(model => model.DUI, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label class="form-label fw-bold d-block">Full Coverage</label>
                    <div class="form-check">
                        @Html.CheckBoxFor(model => model.CoverageType, new { @class = "form-check-input" })
                        <label class="form-check-label">Yes</label>
                    </div>
                    @Html.ValidationMessageFor(model => model.CoverageType, "", new { @class = "text-danger" })
                </div>
            </div>

            <h5 class="mt-4">Insurance Quote</h5>
            <hr />

            <div class="row mb-3">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.QuoteAmount, new { @class = "form-label fw-bold" })
                    @Html.EditorFor(model => model.QuoteAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.QuoteAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 text-center">
                    <input type="submit" value="Create" class="btn btn-primary px-4" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ms-3 px-4" })
                </div>
            </div>
        </div>
    </div>
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let inputs = document.querySelectorAll("input, select");
        inputs.forEach(input => {
            input.addEventListener("change", calculateQuote);
        });

        function calculateQuote() {
            debugger;
            let basePrice = 50;
            let age = new Date().getFullYear() - new Date(document.getElementById("DateOfBirth").value).getFullYear();
            let carYear = parseInt(document.getElementById("CarYear").value) || 0;
            let carMake = document.getElementById("CarMake").value.toLowerCase();
            let carModel = document.getElementById("CarModel").value.toLowerCase();
            let speedingTickets = parseInt(document.getElementById("SpeedingTickets").value) || 0;
            let dui = document.getElementById("DUI").checked;
            let fullCoverage = document.getElementById("CoverageType").checked;

            let quote = basePrice;

            // Age-based pricing
            if (age < 18) quote += 100;
            else if (age >= 18 && age <= 25) quote += 50;
            else if (age > 25) quote += 25;

            // Car Year Factor
            if (carYear < 2000) quote += 25;
            else if (carYear > 2015) quote += 50;

            // Car Make Factor
            if (carMake === "porsche") {
                quote += 50;
                if (carModel === "911 carrera") quote += 25;
            }

            // Speeding Tickets
            quote += speedingTickets * 10;

            // DUI (increases by 25%)
            if (dui) quote *= 1.25;

            // Full Coverage (doubles the price)
            if (fullCoverage) quote *= 2;

            // Display calculated quote
            document.getElementById("QuoteAmount").value = quote.toFixed(2);
        }
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
